(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{193:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return p}));var a=t(1),r=t(10),c=(t(0),t(245)),o={},i={id:"generated-config/typescript-document-nodes",title:"typescript-document-nodes",description:"### namingConvention (`NamingConvention`, default value: `pascal-case#pascalCase`)",source:"@site/docs/generated-config/typescript-document-nodes.md",permalink:"/docs/generated-config/typescript-document-nodes",editUrl:"https://github.com/dotansimha/graphql-code-generator/edit/master/website/docs/generated-config/typescript-document-nodes.md"},s=[{value:"namingConvention (<code>NamingConvention</code>, default value: <code>pascal-case#pascalCase</code>)",id:"namingconvention-namingconvention-default-value-pascal-casepascalcase",children:[]},{value:"namePrefix (<code>string</code>, default value: <code>&#39;&#39;</code>)",id:"nameprefix-string-default-value-",children:[]},{value:"nameSuffix (<code>string</code>, default value: <code>&#39;&#39;</code>)",id:"namesuffix-string-default-value-",children:[]}],l={rightToc:s};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h3",{id:"namingconvention-namingconvention-default-value-pascal-casepascalcase"},"namingConvention (",Object(c.b)("inlineCode",{parentName:"h3"},"NamingConvention"),", default value: ",Object(c.b)("inlineCode",{parentName:"h3"},"pascal-case#pascalCase"),")"),Object(c.b)("p",null,"Allow you to override the naming convention of the output. You can either override all namings, or specify an object with specific custom naming convention per output. The format of the converter must be a valid ",Object(c.b)("inlineCode",{parentName:"p"},"module#method"),". Allowed values for specific output are: ",Object(c.b)("inlineCode",{parentName:"p"},"typeNames"),", ",Object(c.b)("inlineCode",{parentName:"p"},"enumValues"),'. You can also use "keep" to keep all GraphQL names as-is. Additionally you can set ',Object(c.b)("inlineCode",{parentName:"p"},"transformUnderscore")," to ",Object(c.b)("inlineCode",{parentName:"p"},"true")," if you want to override the default behaviour, which is to preserves underscores."),Object(c.b)("h4",{id:"usage-example-override-all-names"},"Usage Example: Override All Names"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  namingConvention: lower-case#lowerCase\n")),Object(c.b)("h4",{id:"usage-example-upper-case-enum-values"},"Usage Example: Upper-case enum values"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  namingConvention:\n    typeNames: pascal-case#pascalCase\n    enumValues: upper-case#upperCase\n")),Object(c.b)("h4",{id:"usage-example-keep"},"Usage Example: Keep"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  namingConvention: keep\n")),Object(c.b)("h4",{id:"usage-example-remove-underscores"},"Usage Example: Remove Underscores"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  namingConvention:\n    typeNames: pascal-case#pascalCase\n    transformUnderscore: true\n")),Object(c.b)("h3",{id:"nameprefix-string-default-value-"},"namePrefix (",Object(c.b)("inlineCode",{parentName:"h3"},"string"),", default value: ",Object(c.b)("inlineCode",{parentName:"h3"},"''"),")"),Object(c.b)("p",null,"Adds prefix to the name"),Object(c.b)("h4",{id:"usage-example"},"Usage Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yml"})," documents: src/api/user-service/queries.graphql\n generates:\n   src/api/user-service/queries.ts:\n   plugins:\n     - typescript-document-nodes\n   config:\n     namePrefix: 'gql'\n")),Object(c.b)("h3",{id:"namesuffix-string-default-value-"},"nameSuffix (",Object(c.b)("inlineCode",{parentName:"h3"},"string"),", default value: ",Object(c.b)("inlineCode",{parentName:"h3"},"''"),")"),Object(c.b)("p",null,"Adds suffix to the name"),Object(c.b)("h4",{id:"usage-example-1"},"Usage Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yml"})," documents: src/api/user-service/queries.graphql\n generates:\n   src/api/user-service/queries.ts:\n   plugins:\n     - typescript-document-nodes\n   config:\n     nameSuffix: 'Query'\n")))}p.isMDXComponent=!0},245:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var a=t(0),r=t.n(a);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),p=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i({},n,{},e)),t},u=function(e){var n=p(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},m=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,b=u["".concat(o,".").concat(m)]||u[m]||d[m]||c;return t?r.a.createElement(b,i({ref:n},l,{components:t})):r.a.createElement(b,i({ref:n},l))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,o=new Array(c);o[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<c;l++)o[l]=t[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);