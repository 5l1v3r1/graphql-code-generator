(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{171:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return p})),t.d(n,"default",(function(){return d}));var r=t(1),a=t(10),o=(t(0),t(240)),i={id:"java-apollo-android",title:"Java Apollo Android"},l={id:"plugins/java-apollo-android",title:"Java Apollo Android",description:"The `java-apollo-android` plugin and presets creates generated mappers and parsers for a complete type-safe GraphQL requests, for developers that uses Apollo Android runtime.",source:"@site/docs/plugins/java-apollo-android.md",permalink:"/docs/plugins/java-apollo-android",editUrl:"https://github.com/dotansimha/graphql-code-generator/edit/master/website/docs/plugins/java-apollo-android.md",sidebar:"sidebar",previous:{title:"Java Resolvers",permalink:"/docs/plugins/java-resolvers"},next:{title:"Fragment Matcher",permalink:"/docs/plugins/fragment-matcher"}},p=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Configuration",id:"configuration",children:[]}],c={rightToc:p};function d(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"java-apollo-android")," plugin and presets creates generated mappers and parsers for a complete type-safe GraphQL requests, for developers that uses Apollo Android runtime."),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)("p",null,"To get started with this plugins and preset, make sure you have the following installed:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"NodeJS (10 or later)"),Object(o.b)("li",{parentName:"ul"},"NPM or Yarn")),Object(o.b)("p",null,"Run the following in your Android project:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"  $ yarn init --yes\n  $ yarn add @graphql-codegen/cli graphql @graphql-codegen/java-apollo-android\n")),Object(o.b)("p",null,"Then, create ",Object(o.b)("inlineCode",{parentName:"p"},"codegen.yml")," with the following configuration:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),'schema: POINT_TO_YOUR_SCHEMA\ndocuments: POINT_TO_YOUR_GRAPHQL_OPERATIONS\ngenerates:\n  ./app/src/main/java/:\n    preset: java-apollo-android\n    config:\n      package: "com.my.app.generated.graphql"\n      fragmentPackage: "com.my.app.generated.graphql"\n      typePackage: "type"\n    plugins:\n      - java-apollo-android\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Also, make sure to add ",Object(o.b)("inlineCode",{parentName:"p"},"node_modules")," to your ",Object(o.b)("inlineCode",{parentName:"p"},".gitignore")," file.")),Object(o.b)("p",null,"To integrate with your Gradle build, you can add the following to your app Gradle file:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),'preBuild.doFirst {\n    def proc = "yarn graphql-codegen".execute()\n    proc.waitForProcessOutput(System.out, System.err)\n}\n\nbuild.dependsOn preBuild\n')),Object(o.b)("p",null,"This will make sure to run and generate output before each time you build your project."),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"You can find a ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/dotansimha/graphql-codegen-appsync-android-example"}),"repository with a working example using AppSync")),Object(o.b)("h2",{id:"configuration"},"Configuration"),Object(o.b)("p",null,"{@import: ../docs/generated-config/java-apollo-android.md}\n{@import: ../docs/generated-config/base-visitor.md}"))}d.isMDXComponent=!0},240:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=a.a.createContext({}),d=function(e){var n=a.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l({},n,{},e)),t},u=function(e){var n=d(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=d(t),b=r,m=u["".concat(i,".").concat(b)]||u[b]||s[b]||o;return t?a.a.createElement(m,l({ref:n},c,{components:t})):a.a.createElement(m,l({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=b;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);