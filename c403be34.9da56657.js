(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{218:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return c})),n.d(a,"metadata",(function(){return l})),n.d(a,"rightToc",(function(){return i})),n.d(a,"default",(function(){return p}));var t=n(1),r=n(10),o=(n(0),n(249)),c={},l={id:"generated-config/base-visitor",title:"base-visitor",description:"### scalars (`ScalarsMap`)",source:"@site/docs/generated-config/base-visitor.md",permalink:"/docs/generated-config/base-visitor",editUrl:"https://github.com/dotansimha/graphql-code-generator/edit/master/website/docs/generated-config/base-visitor.md"},i=[{value:"scalars (<code>ScalarsMap</code>)",id:"scalars-scalarsmap",children:[]},{value:"namingConvention (<code>NamingConvention</code>, default value: <code>pascal-case#pascalCase</code>)",id:"namingconvention-namingconvention-default-value-pascal-casepascalcase",children:[]},{value:"typesPrefix (<code>string</code>, default value: <code>&quot;&quot;</code>)",id:"typesprefix-string-default-value-",children:[]},{value:"skipTypename (<code>boolean</code>, default value: <code>false</code>)",id:"skiptypename-boolean-default-value-false",children:[]},{value:"nonOptionalTypename (<code>boolean</code>, default value: <code>false</code>)",id:"nonoptionaltypename-boolean-default-value-false",children:[]}],s={rightToc:i};function p(e){var a=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},s,n,{components:a,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"scalars-scalarsmap"},"scalars (",Object(o.b)("inlineCode",{parentName:"h3"},"ScalarsMap"),")"),Object(o.b)("p",null,"Extends or overrides the built-in scalars and custom GraphQL scalars to a custom type."),Object(o.b)("h4",{id:"usage-example"},"Usage Example"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yml"}),'config:\n  scalars:\n    DateTime: Date\n    JSON: "{ [key: string]: any }"\n')),Object(o.b)("h3",{id:"namingconvention-namingconvention-default-value-pascal-casepascalcase"},"namingConvention (",Object(o.b)("inlineCode",{parentName:"h3"},"NamingConvention"),", default value: ",Object(o.b)("inlineCode",{parentName:"h3"},"pascal-case#pascalCase"),")"),Object(o.b)("p",null,"Allow you to override the naming convention of the output. You can either override all namings, or specify an object with specific custom naming convention per output. The format of the converter must be a valid ",Object(o.b)("inlineCode",{parentName:"p"},"module#method"),". Allowed values for specific output are: ",Object(o.b)("inlineCode",{parentName:"p"},"typeNames"),", ",Object(o.b)("inlineCode",{parentName:"p"},"enumValues"),'. You can also use "keep" to keep all GraphQL names as-is. Additionally you can set ',Object(o.b)("inlineCode",{parentName:"p"},"transformUnderscore")," to ",Object(o.b)("inlineCode",{parentName:"p"},"true")," if you want to override the default behaviour, which is to preserves underscores."),Object(o.b)("h4",{id:"usage-example-override-all-names"},"Usage Example: Override All Names"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  namingConvention: lower-case#lowerCase\n")),Object(o.b)("h4",{id:"usage-example-upper-case-enum-values"},"Usage Example: Upper-case enum values"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  namingConvention:\n    typeNames: pascal-case#pascalCase\n    enumValues: upper-case#upperCase\n")),Object(o.b)("h4",{id:"usage-example-keep"},"Usage Example: Keep"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  namingConvention: keep\n")),Object(o.b)("h4",{id:"usage-example-remove-underscores"},"Usage Example: Remove Underscores"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  namingConvention:\n    typeNames: pascal-case#pascalCase\n    transformUnderscore: true\n")),Object(o.b)("h3",{id:"typesprefix-string-default-value-"},"typesPrefix (",Object(o.b)("inlineCode",{parentName:"h3"},"string"),", default value: ",Object(o.b)("inlineCode",{parentName:"h3"},'""'),")"),Object(o.b)("p",null,"Prefixes all the generated types."),Object(o.b)("h4",{id:"usage-example-add-i-prefix"},'Usage Example: Add "I" Prefix'),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  typesPrefix: I\n")),Object(o.b)("h3",{id:"skiptypename-boolean-default-value-false"},"skipTypename (",Object(o.b)("inlineCode",{parentName:"h3"},"boolean"),", default value: ",Object(o.b)("inlineCode",{parentName:"h3"},"false"),")"),Object(o.b)("p",null,"Does not add __typename to the generated types, unless it was specified in the selection set."),Object(o.b)("h4",{id:"usage-example-1"},"Usage Example"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  skipTypename: true\n")),Object(o.b)("h3",{id:"nonoptionaltypename-boolean-default-value-false"},"nonOptionalTypename (",Object(o.b)("inlineCode",{parentName:"h3"},"boolean"),", default value: ",Object(o.b)("inlineCode",{parentName:"h3"},"false"),")"),Object(o.b)("p",null,"Automatically adds ",Object(o.b)("inlineCode",{parentName:"p"},"__typename")," field to the generated types, even when they are not specified in the selection set, and makes it non-optional"),Object(o.b)("h4",{id:"usage-example-2"},"Usage Example"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  nonOptionalTypename: true\n")))}p.isMDXComponent=!0},249:function(e,a,n){"use strict";n.d(a,"a",(function(){return u})),n.d(a,"b",(function(){return m}));var t=n(0),r=n.n(t);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function c(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?c(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var a=r.a.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):l({},a,{},e)),n},u=function(e){var a=p(e.components);return r.a.createElement(s.Provider,{value:a},e.children)},b={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},d=Object(t.forwardRef)((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(n),d=t,m=u["".concat(c,".").concat(d)]||u[d]||b[d]||o;return n?r.a.createElement(m,l({ref:a},s,{components:n})):r.a.createElement(m,l({ref:a},s))}));function m(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,c=new Array(o);c[0]=d;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=e,l.mdxType="string"==typeof e?e:t,c[1]=l;for(var s=2;s<o;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);